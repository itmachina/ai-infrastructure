{
  "permissions": {
    "allow": [
      "Bash(ls -la)",
      "Bash(ls -la .claude)",
      "Bash(find . -name \"*.md\" -o -name \"*.txt\" -o -name \"package*.json\" -o -name \"requirements*.txt\" -o -name \"pyproject.toml\" -o -name \"pom.xml\" -o -name \"build.gradle\" -o -name \"Cargo.toml\" -o -name \"go.mod\" -o -name \"*.yml\" -o -name \"*.yaml\")",
      "Bash(find . -name \"*.py\" -o -name \"*.js\" -o -name \"*.ts\" -o -name \"*.java\" -o -name \"*.go\" -o -name \"*.rs\" -o -name \"*.cpp\" -o -name \"*.cs\" -o -name \"*.php\")",
      "Bash(find . -name \"README*\" -o -name \"readme*\" -o -name \"Readme*\" -o -name \"docs\" -o -name \"doc\")",
      "Bash(find . -name \"*.json\" -o -name \"*.yaml\" -o -name \"*.yml\" -o -name \"*.toml\" -o -name \"*.cfg\" -o -name \"*.conf\")",
      "Bash(find . -type f -name \"*.py\" -o -name \"*.js\" -o -name \"*.ts\" -o -name \"*.java\" -o -name \"*.go\" -o -name \"*.rs\" -o -name \"*.cpp\" -o -name \"*.cs\" -o -name \"*.php\")",
      "Bash(find . -type d -not -path \"./.claude\" -not -path \"./.git\")",
      "Bash(find . -name \"技术解析.md\" -o -name \"*技术解析*.md\")",
      "Bash(mkdir -p D:projectai-infrastructuresrcagents D:projectai-infrastructuresrcscheduler D:projectai-infrastructuresrcmemory D:projectai-infrastructuresrctools D:projectai-infrastructuresrcsecurity D:projectai-infrastructuresrccore)",
      "Bash(python test_system.py)",
      "Bash(python main.py)",
      "Bash(mkdir -p src/main/java/com/ai/infrastructure/{agent,core,scheduler,memory,security,tools})",
      "Bash(mkdir out)",
      "Bash(javac -d out src/main/java/com/ai/infrastructure/**/*.java)",
      "Bash(javac -encoding UTF-8 -d out src/main/java/com/ai/infrastructure/**/*.java)",
      "Bash(java -cp out com.ai.infrastructure.Main)",
      "Bash(ls -R out)",
      "Bash(ls src/main/java/com/ai/infrastructure/)",
      "Bash(javac -encoding UTF-8 -d out src/main/java/com/ai/infrastructure/*.java src/main/java/com/ai/infrastructure/*/*.java)",
      "Bash(java -cp out com.ai.infrastructure.TestSuite)",
      "Bash(find . -name \"*.py\" -type f)",
      "Bash(rm -f main.py test_system.py)",
      "Bash(rm -rf src/agents src/core src/memory src/scheduler src/security src/tools src/system_initializer.py)",
      "Bash(ls -R src/main/java/com/ai/infrastructure/)",
      "Bash(rm -rf \"D:projectai-infrastructuresrcagents\" \"D:projectai-infrastructuresrccore\" \"D:projectai-infrastructuresrcmemory\" \"D:projectai-infrastructuresrcscheduler\" \"D:projectai-infrastructuresrcsecurity\" \"D:projectai-infrastructuresrctools\")",
      "Bash(ls -R src)",
      "Bash(rm -rf src/__pycache__)",
      "Bash(ls *.md)",
      "Bash(javac -encoding UTF-8 -d out src/main/java/com/ai/infrastructure/*.java src/main/java/com/ai/infrastructure/*/*.java src/main/java/com/ai/infrastructure/*/*/*.java)",
      "Bash(java -cp out com.ai.infrastructure.steering.AsyncMessageQueueTest)",
      "Bash(mkdir -p src/main/resources)",
      "Bash(mkdir -p logs)",
      "Bash(mvn compile)",
      "Bash(mvn test)",
      "Bash(mkdir -p src/test/java/com/ai/infrastructure)",
      "Bash(mvn package)",
      "Bash(ls -la target/)",
      "Bash(java -jar target/ai-infrastructure-1.0.0.jar)",
      "Bash(find . -name \"docs\" -type d)",
      "Bash(ls -la docs/)",
      "Bash(javac -encoding UTF-8 -d out src/main/java/com/ai/infrastructure/steering/AsyncMessageQueueTest.java src/main/java/com/ai/infrastructure/steering/*.java src/main/java/com/ai/infrastructure/agent/*.java src/main/java/com/ai/infrastructure/tools/*.java src/main/java/com/ai/infrastructure/memory/*.java src/main/java/com/ai/infrastructure/scheduler/*.java src/main/java/com/ai/infrastructure/core/*.java src/main/java/com/ai/infrastructure/*.java)",
      "Bash(mvn test -Dtest=com.ai.infrastructure.steering.AsyncMessageQueueTest)",
      "Bash(mvn compile exec:java -Dexec.mainClass=\"com.ai.infrastructure.steering.RealtimeSteeringDemo\")",
      "Bash(mkdir -p D:projectai-infrastructuresrctestjavacomaiinfrastructure)",
      "Bash(mv \"D:\\project\\ai-infrastructure\\src\\main\\java\\com\\ai\\infrastructure\\TestSuite.java\" \"D:\\project\\ai-infrastructure\\src\\test\\java\\com\\ai\\infrastructure\\AIInfrastructureIntegrationTest.java\")",
      "Bash(mv \"D:\\project\\ai-infrastructure\\src\\main\\java\\com\\ai\\infrastructure\\steering\\AsyncMessageQueueTest.java\" \"D:\\project\\ai-infrastructure\\src\\test\\java\\com\\ai\\infrastructure\\steering\\AsyncMessageQueueIntegrationTest.java\")",
      "Bash(mvn test -Dtest=StreamingMessageParserTest)",
      "Bash(javac -cp \"target/classes;target/test-classes;C:\\Users\\user\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.9.2\\*\" src/test/java/com/ai/infrastructure/steering/StreamingMessageParserDebug.java)",
      "Bash(java -cp \"target/classes;target/test-classes;C:\\Users\\user\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.9.2\\*\" com.ai.infrastructure.steering.StreamingMessageParserDebug)",
      "Bash(mvn compile exec:java -Dexec.mainClass=\"com.ai.infrastructure.steering.StreamingMessageParserDebug\")",
      "Bash(javac -cp \"target/classes;C:\\Users\\user\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.9.2\\*;C:\\Users\\user\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.10.1\\*\" src/test/java/com/ai/infrastructure/steering/StreamingMessageParserDebug.java)",
      "Bash(java -cp \"target/classes;src/test/java;C:\\Users\\user\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.9.2\\*;C:\\Users\\user\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.10.1\\*\" com.ai.infrastructure.steering.StreamingMessageParserDebug)",
      "Bash(java -cp \"target/classes;src/test/java;C:\\Users\\user\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.10.1\\gson-2.10.1.jar\" com.ai.infrastructure.steering.StreamingMessageParserDebug)",
      "Bash(dir \"C:\\Users\\user\\.m2\\repository\\com\\google\\code\\gson\\gson\\2.10.1\"\")",
      "Bash(mvn exec:java -Dexec.mainClass=\"com.ai.infrastructure.steering.StreamingMessageParserDebug\" -Dexec.classpathScope=\"test\")",
      "Bash(mvn test -Dtest=SimpleStreamingMessageParserTest)",
      "Bash(mvn test -Dtest=EnhancedStreamingProcessorTest)",
      "Bash(mvn test -Dtest=EnhancedMainAgentLoopTest)",
      "Bash(mvn clean package:*)",
      "Bash(mvn exec:java:*)",
      "Bash(java:*)",
      "Bash(mvn clean compile assembly:single:*)",
      "WebFetch(domain:docs.iflow.cn)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(mvn clean compile test:*)",
      "Bash(mvn clean test:*)",
      "Bash(mvn dependency:tree)",
      "Bash(ls -la ~/.m2/repository/org/apache/poi/poi/4.1.2/)",
      "Bash(ls -la ~/.m2/repository/org/apache/pdfbox/pdfbox/2.0.27/)",
      "Bash(mvn clean compile)",
      "Bash(rm -rf D:repocommons-codeccommons-codec1.13)",
      "Bash(mvn -X clean compile)",
      "Bash(mvn test-compile)",
      "Bash(mvn test-compile exec:java -Dexec.mainClass=\"com.ai.infrastructure.CoreFeaturesDemo\" -Dexec.classpathScope=\"test\")",
      "Bash(ls -la target/test-classes/com/ai/infrastructure/)",
      "Bash(mvn test -Dtest=CoreFeaturesDemoTest)",
      "Bash(mvn test -Dtest=com.ai.infrastructure.tools.CalculateToolExecutorTest)"
    ],
    "deny": []
  }
}